@model ProductAskQuestionModel
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Model.ProductName);
    pagebuilder.AddTitleParts(Loc["Title.ProductAskQuestion"]);
}
<div class="page ask-a-question-page">
    <h1 class="h2 text-xs-center generalTitle">@Loc["Products.AskQuestion.Title"]</h1>
    <h2 class="h4 text-xs-center"><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></h2>
    @if (Model.SuccessfullySent)
    {
        <section class="result alert alert-info my-3">
            @Model.Result
        </section>
    }
    else
    {
        <validation-observer v-slot="{ handleSubmit }">
            <form asp-route="AskQuestion" method="post" ref="form" v-on:submit.prevent="handleSubmit(formSubmit)">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <fieldset class="form-group">
                    <validation-provider tag="div" rules="required|email" name="Email" v-slot="{ errors, classes }">
                        <label asp-for="Email" class="col-form-label">@Loc["Products.AskQuestion.Email"]:</label>
                        <input asp-for="Email" v-model="askquestion.Email" placeholder="@Loc["Products.AskQuestion.Email.Hint"]" v-bind:class="[classes , 'form-control ask-question-email']" />
                        <span class="field-validation-error">{{ errors[0] }}</span>
                        <span asp-validation-for="Email"></span>
                    </validation-provider>
                </fieldset>
                <fieldset class="form-group">
                    <validation-provider tag="div" rules="required" name="FullName" v-slot="{ errors, classes }">
                        <label asp-for="FullName" class="col-form-label">@Loc["Products.AskQuestion.FullName"]:</label>
                        <input asp-for="FullName" v-model="askquestion.FullName" placeholder="@Loc["Products.AskQuestion.FullName.Hint"]" v-bind:class="[classes , 'form-control ask-question-fullname']" />
                        <span class="field-validation-error">{{ errors[0] }}</span>
                        <span asp-validation-for="FullName"></span>
                    </validation-provider>
                </fieldset>
                <fieldset class="form-group">
                    <label asp-for="Phone" class="col-form-label">@Loc["Products.AskQuestion.Phone"]:</label>
                    <input asp-for="Phone" placeholder="@Loc["Products.AskQuestion.Phone.Hint"]" class="form-control ask-question-phone" />
                </fieldset>
                <fieldset class="form-group">
                    <validation-provider tag="div" rules="required" name="Message" v-slot="{ errors, classes }">
                        <label asp-for="Message" class="col-form-label">@Loc["Products.AskQuestion.Message"]:</label>
                        <textarea asp-for="Message" v-model="askquestion.Message" placeholder="@Loc["Products.AskQuestion.Message.Hint"]" v-bind:class="[classes , 'form-control ask-question-message']" rows="4"></textarea>
                        <span class="field-validation-error">{{ errors[0] }}</span>
                        <span asp-validation-for="Message"></span>
                    </validation-provider>
                </fieldset>
                @if (Model.DisplayCaptcha)
                {
                    <div class="captcha-box">
                        <captcha />
                    </div>
                }
                <div class="buttons generalMarginSupporter pt-1 pb-1">
                    <input type="submit" name="send-email" class="btn btn-info send-ask-question-button" value="@Loc["Products.AskQuestion.Button"]" />
                    <span class="sr-only">@Loc["Products.AskQuestion.Button"]</span>
                </div>
            </form>
        </validation-observer>
        <script asp-location="Footer" asp-order="300">
                var askquestion = new Vue({
                    data: () => ({
                        @{
                            <text>
                                FullName: '@Html.Raw(Model.FullName)',
                                Email: '@Html.Raw(Model.Email)',
                                Message: '@Html.Raw(Model.Message)',
                            </text>
                        }
                    })
                });
        </script>
    }
</div>
