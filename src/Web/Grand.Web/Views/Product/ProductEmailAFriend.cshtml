@model ProductEmailAFriendModel
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Model.ProductName);
    pagebuilder.AddTitleParts(Loc["Title.ProductEmailAFriend"]);
}
<div class="page email-a-friend-page">
    <h1 class="h2 text-xs-center generalTitle">@Loc["Products.EmailAFriend.Title"]</h1>
    <div class="card">
        <div class="card-header">
            <h4 class="mb-0"><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></h4>
        </div>
        <div class="card-body">
            @if (Model.SuccessfullySent)
            {
                <div class="alert alert-info my-3 text-center result">
                    @Model.Result
                </div>
            }
            else
            {
                <validation-observer v-slot="{ handleSubmit }">
                    <form asp-route="ProductEmailAFriend" method="post" ref="form" v-on:submit.prevent="handleSubmit(formSubmit)">
                        <div asp-validation-summary="ModelOnly" class="message-error"></div>
                        <div class="form-fields">
                            <div class="form-group">
                                <validation-provider tag="div" rules="required|email" name="FriendEmail" v-slot="{ errors }">
                                    <label asp-for="FriendEmail" class="col-form-label">@Loc["Products.EmailAFriend.FriendEmail"]:</label>
                                    <input asp-for="FriendEmail" v-model="emailafriend.FriendEmail" placeholder="@Loc["Products.EmailAFriend.FriendEmail.Hint"]" class="form-control friend-email" autofocus="autofocus" />
                                    <span class="field-validation-error">{{ errors[0] }}</span>
                                    <span asp-validation-for="FriendEmail"></span>
                                </validation-provider>
                            </div>
                            <div class="form-group">
                                <validation-provider tag="div" rules="required|email" name="YourEmailAddress" v-slot="{ errors }">
                                    <label asp-for="YourEmailAddress" class="col-form-label">@Loc["Products.EmailAFriend.YourEmailAddress"]:</label>
                                    <input asp-for="YourEmailAddress" v-model="emailafriend.YourEmailAddress" placeholder="@Loc["Products.EmailAFriend.YourEmailAddress.Hint"]" class="form-control your-email" autofocus="autofocus" />
                                    <span class="field-validation-error">{{ errors[0] }}</span>
                                    <span asp-validation-for="YourEmailAddress"></span>
                                </validation-provider>
                            </div>
                            <div class="form-group">
                                <validation-provider tag="div" rules="required" name="PersonalMessage" v-slot="{ errors }">
                                    <label asp-for="PersonalMessage" class="col-form-label">@Loc["Products.EmailAFriend.PersonalMessage"]:</label>
                                    <textarea asp-for="PersonalMessage" v-model="emailafriend.PersonalMessage" placeholder="@Loc["Products.EmailAFriend.PersonalMessage.Hint"]" class="form-control your-email" autofocus="autofocus" rows="4"></textarea>
                                    <span class="field-validation-error">{{ errors[0] }}</span>
                                    <span asp-validation-for="YourEmailAddress"></span>
                                </validation-provider>
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    <captcha />
                                </div>
                            }
                        </div>
                        <div class="btn-group">
                            <input type="submit" name="send-email" class="btn btn-info send-email-a-friend-button" value="@Loc["Products.EmailAFriend.Button"]" />
                        </div>
                    </form>
                </validation-observer>
                <script asp-location="Footer" asp-order="300">
                    var emailafriend = new Vue({
                        data: () => ({
                            @{
                                <text>
                                    FriendEmail: '@Html.Raw(Model.FriendEmail)',
                                    YourEmailAddress: '@Html.Raw(Model.YourEmailAddress)',
                                    PersonalMessage: '@Html.Raw(Model.PersonalMessage)',
                                </text>
                            }
                        })
                    });
                </script>
            }
        </div>
    </div>
</div>