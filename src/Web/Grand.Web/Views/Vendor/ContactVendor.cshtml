@model ContactVendorModel
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Loc["Title.ContactVendor", Model.VendorName]);
}
<div class="page vendor-page">
    <h1 class="h2 generalTitle text-xs-center">@Loc["Title.ContactVendor", Model.VendorName]</h1>
    @await Component.InvokeAsync("Widget", new { widgetZone = "contactvendor_top" })
    @if (Model.SuccessfullySent)
    {
        <div class="result alert alert-info text-center my-3">
            @Model.Result
        </div>
    }
    else
    {
        <validation-observer v-slot="{ handleSubmit }">
            <form asp-route="ContactVendor" method="post" ref="form" v-on:submit.prevent="handleSubmit(formSubmit)">
                <div asp-validation-summary="ModelOnly" class="message-error"></div>
                <div class="form-fields d-flex row">
                    <div class="form-group col-12 col-sm-6">
                        <validation-provider tag="div" rules="required" name="FullName" v-slot="{ errors }">
                            <label asp-for="FullName" class="col-form-label">@Loc["ContactVendor.FullName"]:</label>
                            <span class="required">*</span>
                            <input asp-for="FullName" v-model="contactvendor.FullName" placeholder="@Loc["ContactVendor.FullName.Hint"]" class="form-control" />
                            <span class="field-validation-error">{{ errors[0] }}</span>
                            <span asp-validation-for="FullName"></span>
                        </validation-provider>
                    </div>
                    <div class="form-group col-12 col-sm-6">
                        <validation-provider tag="div" rules="required|email" name="Email" v-slot="{ errors }">
                            <label asp-for="Email" class="col-form-label">@Loc["ContactVendor.Email"]:</label>
                            <span class="required">*</span>
                            <input asp-for="Email" v-model="contactvendor.Email" placeholder="@Loc["ContactVendor.Email.Hint"]" class="form-control" />
                            <span class="field-validation-error">{{ errors[0] }}</span>
                            <span asp-validation-for="Email"></span>
                        </validation-provider>
                    </div>
                    @if (Model.SubjectEnabled)
                    {
                        <div class="form-group col-12">
                            <validation-provider tag="div" rules="required" name="Subject" v-slot="{ errors }">
                                <label asp-for="Subject" class="col-form-label">@Loc["ContactVendor.Subject"]:</label>
                                <span class="required">*</span>
                                <input asp-for="Subject" v-model="contactvendor.Subject" placeholder="@Loc["ContactVendor.Subject.Hint"]" class="form-control" />
                                <span class="field-validation-error">{{ errors[0] }}</span>
                                <span asp-validation-for="Subject"></span>
                            </validation-provider>
                        </div>
                    }
                    <div class="form-group col-12">
                        <validation-provider tag="div" rules="required" name="Enquiry" v-slot="{ errors }">
                            <label asp-for="Enquiry" class="col-form-label">@Loc["ContactVendor.Enquiry"]:</label>
                            <span class="required">*</span>
                            <textarea asp-for="Enquiry" v-model="contactvendor.Enquiry" placeholder="@Loc["ContactVendor.Enquiry.Hint"]" class="form-control" rows="4"></textarea>
                            <span class="field-validation-error">{{ errors[0] }}</span>
                            <span asp-validation-for="Enquiry"></span>
                        </validation-provider>
                    </div>
                    @if (Model.DisplayCaptcha)
                    {
                        <div class="captcha-box px-3">
                            <captcha />
                        </div>
                    }
                </div>
                <div class="btn-group text-sm-center pt-3 pb-3">
                    <input type="submit" name="send-email" class="btn btn-info contact-us-button" value="@Loc["ContactVendor.Button"]" />
                </div>
            </form>
        </validation-observer>
        <script asp-location="Footer" asp-order="300">
                var contactvendor = new Vue({
                    data: () => ({
                        @{
                            <text>
                                FullName: '@Html.Raw(Model.FullName)',
                                Email: '@Html.Raw(Model.Email)',
                                Subject: '@Html.Raw(Model.Subject)',
                                Enquiry: '@Html.Raw(Model.Enquiry)',
                            </text>
                        }
                    })
                });
        </script>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = "contactvendor_bottom" })
</div>
