@model MerchandiseReturnModel
@using Grand.Web.Models.Orders;
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_SingleColumn";

    //title
    pagebuilder.AddTitleParts(Loc["Title.ReturnItems"]);
}
<div class="page return-request-page">
    <h1 class="text-center generalTitle h2">@string.Format(Loc["MerchandiseReturns.Title"], Model.OrderNumber)</h1>
    @if (!String.IsNullOrEmpty(Model.Result))
    {
        <div class="result alert alert-info">
            @Html.Raw(Model.Result)
        </div>
    }
    else
    {
        @if (!String.IsNullOrEmpty(Model.Error))
        {
            <div class="result alert alert-danger">
                @Model.Error
            </div>
        }
        <validation-observer v-slot="{ handleSubmit }">
            <form asp-route="MerchandiseReturn" method="post" ref="form" v-on:submit.prevent="handleSubmit(formSubmit)">
                <div class="mt-2">
                    <h2 class="h5 mt-3"><strong>@Loc["MerchandiseReturns.SelectProduct(s)"]</strong></h2>
                    <div class="table-responsive">
                        <table class="table table-hover data-table">
                            <colgroup>
                                <col />
                                <col width="200" />
                                <col width="150" />
                            </colgroup>
                            <thead class="table-inverse">
                                <tr>
                                    <th class="product">
                                        @Loc["MerchandiseReturns.Products.Name"]
                                    </th>
                                    <th class="unit-price">
                                        @Loc["MerchandiseReturns.Products.Price"]
                                    </th>
                                    <th class="quantity">
                                        @Loc["MerchandiseReturns.Products.Quantity"]
                                    </th>
                                    <th>
                                        @Loc["MerchandiseReturns.ReturnReason"]
                                    </th>
                                    <th>
                                        @Loc["MerchandiseReturns.ReturnAction"]
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td class="product">
                                            <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                            @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                            {
                                                <div class="attributes">
                                                    @Html.Raw(item.AttributeInfo)
                                                </div>
                                            }
                                            @if (!String.IsNullOrEmpty(item.VendorName))
                                            {
                                                <div class="vendor">
                                                    @item.VendorName
                                                </div>
                                            }
                                        </td>
                                        <td class="unit-price">
                                            @item.UnitPrice
                                        </td>
                                        <td class="quantity">
                                            <select class="custom-select form-control" name="quantity@(item.Id)">
                                                @for (int i = 0; i <= item.Quantity; i++)
                                                {
                                                    <option value="@(i)">@(i)</option>
                                                }
                                            </select>
                                        </td>
                                        <td>
                                            @{
                                                var reasonsSelectList = Model.AvailableReturnReasons.Select(x => new SelectListItem
                                                {
                                                    Text = x.Name,
                                                    Value = x.Id.ToString()
                                                }).ToList();
                                            }
                                            <select asp-for="@item.MerchandiseReturnReasonId" asp-items="@reasonsSelectList" name="reason@(item.Id)" class="form-control custom-select return-reasons"></select>
                                        </td>
                                        <td>
                                            @{
                                                var actionsSelectList = Model.AvailableReturnActions.Select(x => new SelectListItem
                                                {
                                                    Text = x.Name,
                                                    Value = x.Id.ToString()
                                                }).ToList();
                                            }
                                            <select asp-for="@item.MerchandiseReturnReasonId" asp-items="@actionsSelectList" name="action@(item.Id)" class="form-control custom-select return-actions"></select>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="form-fields">
                    <div class="form-group">
                        <label asp-for="Comments" class="col-form-label">@Loc["MerchandiseReturns.Comments"]:</label>
                        <textarea asp-for="Comments" class="form-control comment"></textarea>
                        <span asp-validation-for="Comments"></span>
                    </div>
                    @if (Model.ShowPickupAddress)
                    {
                        <div class="form-group">
                            <div class="pickup-addresses" id="pickup-addresses-form">
                                @if (Model.ExistingAddresses.Any())
                                {
                                    <div class="section select-pickup-address">
                                        <label for="pickup-address-select">@Loc["MerchandiseReturns.SelectPickupAddressOrEnterNewOne"]</label>
                                        <div>
                                            <select name="pickup_address_id" id="pickup-address-select" class="custom-select address-select"
                                                    title="" onchange="newAddress(!this.value)">
                                                @foreach (var address in Model.ExistingAddresses)
                                                {
                                                    var addressLine = "";
                                                    addressLine += address.FirstName;
                                                    addressLine += " " + address.LastName;
                                                    if (address.StreetAddressEnabled && !String.IsNullOrEmpty(address.Address1))
                                                    {
                                                        addressLine += ", " + address.Address1;
                                                    }
                                                    if (address.CityEnabled && !String.IsNullOrEmpty(address.City))
                                                    {
                                                        addressLine += ", " + address.City;
                                                    }
                                                    if (address.StateProvinceEnabled && !String.IsNullOrEmpty(address.StateProvinceName))
                                                    {
                                                        addressLine += ", " + address.StateProvinceName;
                                                    }
                                                    if (address.ZipPostalCodeEnabled && !String.IsNullOrEmpty(address.ZipPostalCode))
                                                    {
                                                        addressLine += " " + address.ZipPostalCode;
                                                    }
                                                    if (address.CountryEnabled && !String.IsNullOrWhiteSpace(address.CountryName))
                                                    {
                                                        addressLine += ", " + address.CountryName;
                                                    }
                                                    <option selected="@(!Model.NewAddressPreselected && Model.ExistingAddresses[0].Id == address.Id)" value="@(address.Id)">@(addressLine)</option>
                                                }
                                                <option value="" selected="@Model.NewAddressPreselected">@Loc["MerchandiseReturns.NewAddress"]</option>
                                            </select>
                                        </div>
                                    </div>
                                }
                                <div class="section new-pickup-address" id="pickup-new-address-form" ref="visible">
                                    <div class="enter-address">
                                        <div asp-validation-summary="ModelOnly" class="message-error"></div>
                                        @{
                                            var dataDictAddress = new ViewDataDictionary(ViewData);
                                            dataDictAddress.TemplateInfo.HtmlFieldPrefix = "MerchandiseReturnNewAddress";
                                            <partial name="_CreateOrUpdateAddress" model="Model.NewAddress" view-data="dataDictAddress" />
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.ShowPickupDate)
                    {
                        <div class="form-group">
                            <validation-provider tag="div" rules="required" name="PickupDate" v-slot="{ errors, classes }">
                                <label class="col-form-label">@Loc["MerchandiseReturns.PickupDate"]:</label>
                                <span class="required">*</span>
                                <input asp-for="PickupDate" type="date" v-model="merchandisereturns.PickupDate" v-bind:class="[classes , 'form-control datepicker']" />
                                <span class="field-validation-error">{{ errors[0] }}</span>
                            </validation-provider>
                        </div>
                        <script asp-location="Footer" asp-order="300">
                            var merchandisereturns = new Vue({
                                data: () => ({
                                    @{
                                        <text>
                                            PickupDate: '@Html.Raw(Model.PickupDate)',
                                        </text>
                                    }
                                })
                            });
                        </script>
                    }
                </div>
                <div class="row">
                    <div class="col-12 btn-group mt-1 mb-1">
                        <input type="submit" name="submit-return-request" class="btn btn-secondary submit-return-request-button" value="@Loc["MerchandiseReturns.Submit"]" />
                    </div>
                </div>
            </form>
        </validation-observer>
    }
</div>
<script asp-location="Footer">
    document.addEventListener("DOMContentLoaded", function () {
        if (document.querySelector("#pickup-address-select").value != "") {
            newAddress(false);
        }
    });
</script>