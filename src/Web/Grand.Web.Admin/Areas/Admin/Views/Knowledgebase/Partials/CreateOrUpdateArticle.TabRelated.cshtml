@model KnowledgebaseArticleModel

@if (!String.IsNullOrEmpty(Model.Id))
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div id="relatedarticles-grid"></div>
        </div>
        <div class="panel-footer">
            <a id="btnAddNewRelatedArticle" href="@(Url.Action("ArticlesPopup", "Knowledgebase", new { articleId = Model.Id, btnId = "btnRefreshRelatedArticles", formId = "article-form", area = Constants.AreaAdmin  }))" class="k-button"><i class="fa fa-plus"></i>&nbsp;@Loc["Admin.Content.Knowledgebase.KnowledgebaseArticle.Related.AddNew"]</a>
            <input type="submit" id="btnRefreshRelatedArticles" style="display: none" />
        </div>
    </div>

    <script>
        $(document).ready(function () {
            $('#btnAddNewRelatedArticle').magnificPopup({
                type: 'ajax',
                settings: { cache: false, async: false },
                midClick: true,
                callbacks: {
                    parseAjax: function (mfpResponse) {
                        mfpResponse.data = $('<div></div>').html(mfpResponse.data);
                    },
                    ajaxContentAdded: function () {
                        $('.mfp-wrap').removeAttr('tabindex');
                    }
                }
            });
            $("#relatedarticles-grid").kendoGrid({
                dataSource: {
                    transport: {
                        read: {
                            url: "@Html.Raw(Url.Action("RelatedArticlesList", "Knowledgebase", new { articleId = Model.Id, area = Constants.AreaAdmin }))",
                            type: "POST",
                            dataType: "json",
                            data: addAntiForgeryToken
                        }, destroy: {
                            url: "@Html.Raw(Url.Action("RelatedArticleDelete", "Knowledgebase", new { articleId = Model.Id, area = Constants.AreaAdmin }))",
                            type: "POST",
                            dataType: "json",
                            data: addAntiForgeryToken
                        }
                    },
                    schema: {
                        data: "Data",
                        total: "Total",
                        errors: "Errors",
                        model: {
                            id: "Id",
                            fields: {
                                Article2Name: { editable: false, type: "string" },
                                DisplayOrder: { editable: false, type: "number" },
                                Article2Id: { editable: false, type: "string" }
                            }
                        }
                    },
                    requestEnd: function (e) {
                        if (e.type == "update") {
                            this.read();
                        }
                    },
                    error: function (e) {
                        display_kendoui_grid_error(e);
                        // Cancel the changes
                        this.cancelChanges();
                    },
                    serverPaging: true,
                    serverFiltering: true,
                    serverSorting: true
                },
                pageable: {
                    refresh: true,
                    numeric: false,
                    previousNext: false,
                    info: false
                },
                editable: {
                    confirmation: false,
                    mode: "inline"
                },
                scrollable: false,
                columns: [{
                    field: "Article2Name",
                    title: "@Loc["Admin.Content.Knowledgebase.KnowledgebaseArticle.Fields.Name"]",
                    template: '<a href="@Url.Action("EditArticle", "Knowledgebase", new { id = "", area = Constants.AreaAdmin } )/#=Article2Id#">#=kendo.htmlEncode(Article2Name)#</a>',
                    width: 400
                }, {
                    field: "DisplayOrder",
                    title: "@Loc["Admin.Content.Knowledgebase.KnowledgebaseArticle.Fields.DisplayOrder"]",
                    //integer format
                    format: "{0:0}",
                    width: 10
                }, {
                    field: "Published",
                    title: "@Loc["Admin.Content.Knowledgebase.KnowledgebaseArticle.Fields.Published"]",
                    headerAttributes: { style: "text-align:center" },
                    attributes: { style: "text-align:center" },
                    template: '# if(Published) {# <i class="fa fa-check" aria-hidden="true" style="color:green"></i> #} else {# <i class="fa fa-times" aria-hidden="true" style="color:red"></i> #} #',
                    width: 10
                }, {
                    command: [{
                        name: "destroy",
                        text: "@Loc["Admin.Common.Delete"]"
                    }],
                    width: 10
                }]
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#btnRefreshRelatedArticles').click(function () {
                //refresh grid
                var grid = $("#relatedarticles-grid").data('kendoGrid');
                grid.dataSource.read();

                //return false to don't reload a page
                return false;
            });
        });
    </script>
}
else
{
    <div class="note note-info">
        @Loc["Admin.Content.Knowledgebase.KnowledgebaseArticle.Related.SaveBeforeEdit"]
    </div>
}